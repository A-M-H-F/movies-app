{"ast":null,"code":"import _slicedToArray from\"C:/Users/AMHF/Desktop/project-for-job/project/main/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState,useEffect}from'react';var useFetch=function useFetch(url){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),isPending=_useState4[0],setIsPending=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),error=_useState6[0],setError=_useState6[1];useEffect(function(){var abortCont=new AbortController();setTimeout(function(){fetch(url,{signal:abortCont.signal}).then(function(res){if(!res.ok){// error coming back from server\nthrow Error('could not fetch the data from the server');}return res.json();}).then(function(data){setIsPending(false);setData(data);setError(null);}).catch(function(err){if(err.name==='AbortError'){console.log('fetch aborted');}else{// auto catches network / connection error\nsetIsPending(false);setError(err.message);}});},1000);// abort the fetch\nreturn function(){return abortCont.abort();};},[url]);return{data:data,isPending:isPending,error:error};};export default useFetch;","map":{"version":3,"names":["useState","useEffect","useFetch","url","data","setData","isPending","setIsPending","error","setError","abortCont","AbortController","setTimeout","fetch","signal","then","res","ok","Error","json","catch","err","name","console","log","message","abort"],"sources":["C:/Users/AMHF/Desktop/project-for-job/project/main/src/components/useFetch.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nconst useFetch = (url) => {\n  const [data, setData] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const abortCont = new AbortController();\n    setTimeout(() => {\n      fetch(url, { signal: abortCont.signal })\n        .then((res) => {\n          if (!res.ok) { // error coming back from server\n            throw Error('could not fetch the data from the server');\n          }\n          return res.json();\n        })\n        .then((data) => {\n          setIsPending(false);\n          setData(data);\n          setError(null);\n        })\n        .catch((err) => {\n          if (err.name === 'AbortError') {\n            console.log('fetch aborted');\n          } else {\n          // auto catches network / connection error\n            setIsPending(false);\n            setError(err.message);\n          }\n        });\n    }, 1000);\n\n    // abort the fetch\n    return () => abortCont.abort();\n  }, [url]);\n\n  return { data, isPending, error };\n};\n\nexport default useFetch;\n"],"mappings":"wIAAA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CAEA,GAAMC,SAAQ,CAAG,QAAXA,SAAW,CAACC,GAAD,CAAS,CACxB,cAAwBH,QAAQ,CAAC,IAAD,CAAhC,wCAAOI,IAAP,eAAaC,OAAb,eACA,eAAkCL,QAAQ,CAAC,IAAD,CAA1C,yCAAOM,SAAP,eAAkBC,YAAlB,eACA,eAA0BP,QAAQ,CAAC,IAAD,CAAlC,yCAAOQ,KAAP,eAAcC,QAAd,eAEAR,SAAS,CAAC,UAAM,CACd,GAAMS,UAAS,CAAG,GAAIC,gBAAJ,EAAlB,CACAC,UAAU,CAAC,UAAM,CACfC,KAAK,CAACV,GAAD,CAAM,CAAEW,MAAM,CAAEJ,SAAS,CAACI,MAApB,CAAN,CAAL,CACGC,IADH,CACQ,SAACC,GAAD,CAAS,CACb,GAAI,CAACA,GAAG,CAACC,EAAT,CAAa,CAAE;AACb,KAAMC,MAAK,CAAC,0CAAD,CAAX,CACD,CACD,MAAOF,IAAG,CAACG,IAAJ,EAAP,CACD,CANH,EAOGJ,IAPH,CAOQ,SAACX,IAAD,CAAU,CACdG,YAAY,CAAC,KAAD,CAAZ,CACAF,OAAO,CAACD,IAAD,CAAP,CACAK,QAAQ,CAAC,IAAD,CAAR,CACD,CAXH,EAYGW,KAZH,CAYS,SAACC,GAAD,CAAS,CACd,GAAIA,GAAG,CAACC,IAAJ,GAAa,YAAjB,CAA+B,CAC7BC,OAAO,CAACC,GAAR,CAAY,eAAZ,EACD,CAFD,IAEO,CACP;AACEjB,YAAY,CAAC,KAAD,CAAZ,CACAE,QAAQ,CAACY,GAAG,CAACI,OAAL,CAAR,CACD,CACF,CApBH,EAqBD,CAtBS,CAsBP,IAtBO,CAAV,CAwBA;AACA,MAAO,kBAAMf,UAAS,CAACgB,KAAV,EAAN,EAAP,CACD,CA5BQ,CA4BN,CAACvB,GAAD,CA5BM,CAAT,CA8BA,MAAO,CAAEC,IAAI,CAAJA,IAAF,CAAQE,SAAS,CAATA,SAAR,CAAmBE,KAAK,CAALA,KAAnB,CAAP,CACD,CApCD,CAsCA,cAAeN,SAAf"},"metadata":{},"sourceType":"module"}