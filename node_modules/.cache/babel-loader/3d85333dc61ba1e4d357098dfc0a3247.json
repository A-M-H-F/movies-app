{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AMHF\\\\Desktop\\\\project-for-job\\\\project\\\\main\\\\src\\\\components\\\\SortMovie.jsx\";\n\n/* eslint-disable */\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SortMovie(_ref) {\n  let {\n    movies,\n    sortByYearSelected\n  } = _ref;\n  // get release years\n  const getYears = movies.map(movie => movie.releaseYear); // remove duplicates\n\n  const filterYears = getYears.filter(function (year, d) {\n    return getYears.indexOf(year) == d;\n  }).sort(function (a, b) {\n    return a - b;\n  }); // console.log(filterYears)\n\n  function sortByYear(e) {\n    sortByYearSelected(e.target.value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"select-filter-container\",\n    children: /*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"select-filter\",\n      onChange: sortByYear,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: defaultValue,\n        children: \"Sort By Year\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), filterYears.map(year => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: year,\n        children: year\n      }, year, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}\n\n_c = SortMovie;\nexport default SortMovie;\n\nvar _c;\n\n$RefreshReg$(_c, \"SortMovie\");","map":{"version":3,"names":["useEffect","SortMovie","movies","sortByYearSelected","getYears","map","movie","releaseYear","filterYears","filter","year","d","indexOf","sort","a","b","sortByYear","e","target","value","defaultValue"],"sources":["C:/Users/AMHF/Desktop/project-for-job/project/main/src/components/SortMovie.jsx"],"sourcesContent":["/* eslint-disable */\r\nimport { useEffect } from 'react';\r\n\r\nfunction SortMovie({ movies, sortByYearSelected }) {\r\n    // get release years\r\n    const getYears = movies.map((movie) => movie.releaseYear);\r\n    // remove duplicates\r\n    const filterYears = getYears.filter(function (year, d) {\r\n        return getYears.indexOf(year) == d;\r\n    }).sort(function (a, b) { return a - b })\r\n    // console.log(filterYears)\r\n\r\n    function sortByYear(e) {\r\n        sortByYearSelected(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <div className=\"select-filter-container\">\r\n            <select className=\"select-filter\" onChange={sortByYear}>\r\n                <option value={defaultValue}>Sort By Year</option>\r\n                {filterYears.map((year) => (\r\n                    <option value={year} key={year}>{year}</option>\r\n                ))}\r\n            </select>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SortMovie;\r\n"],"mappings":";;AAAA;AACA,SAASA,SAAT,QAA0B,OAA1B;;;AAEA,SAASC,SAAT,OAAmD;EAAA,IAAhC;IAAEC,MAAF;IAAUC;EAAV,CAAgC;EAC/C;EACA,MAAMC,QAAQ,GAAGF,MAAM,CAACG,GAAP,CAAYC,KAAD,IAAWA,KAAK,CAACC,WAA5B,CAAjB,CAF+C,CAG/C;;EACA,MAAMC,WAAW,GAAGJ,QAAQ,CAACK,MAAT,CAAgB,UAAUC,IAAV,EAAgBC,CAAhB,EAAmB;IACnD,OAAOP,QAAQ,CAACQ,OAAT,CAAiBF,IAAjB,KAA0BC,CAAjC;EACH,CAFmB,EAEjBE,IAFiB,CAEZ,UAAUC,CAAV,EAAaC,CAAb,EAAgB;IAAE,OAAOD,CAAC,GAAGC,CAAX;EAAc,CAFpB,CAApB,CAJ+C,CAO/C;;EAEA,SAASC,UAAT,CAAoBC,CAApB,EAAuB;IACnBd,kBAAkB,CAACc,CAAC,CAACC,MAAF,CAASC,KAAV,CAAlB;EACH;;EAED,oBACI;IAAK,SAAS,EAAC,yBAAf;IAAA,uBACI;MAAQ,SAAS,EAAC,eAAlB;MAAkC,QAAQ,EAAEH,UAA5C;MAAA,wBACI;QAAQ,KAAK,EAAEI,YAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,EAEKZ,WAAW,CAACH,GAAZ,CAAiBK,IAAD,iBACb;QAAQ,KAAK,EAAEA,IAAf;QAAA,UAAiCA;MAAjC,GAA0BA,IAA1B;QAAA;QAAA;QAAA;MAAA,QADH,CAFL;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAUH;;KAvBQT,S;AAyBT,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}