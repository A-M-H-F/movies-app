{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AMHF\\\\Desktop\\\\project-for-job\\\\project\\\\main\\\\src\\\\components\\\\MovieList.jsx\",\n    _s = $RefreshSig$();\n\nimport { Link } from 'react-router-dom';\nimport { useState } from 'react';\nimport './movielist.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MovieList(_ref) {\n  _s();\n\n  let {\n    movies\n  } = _ref;\n  const urlRegex = /\\s/g;\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filteredResults, setFilteredResults] = useState([]);\n\n  const searchData = value => {\n    setSearchTerm(value);\n\n    if (searchTerm !== '') {\n      const filteredData = movies.filter(movie => Object.values(movie.title).join('').toLowerCase().includes(searchTerm.toLowerCase()));\n      setFilteredResults(filteredData);\n    } else {\n      setFilteredResults(movies);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"search f-left\",\n        type: \"text\",\n        placeholder: \"Search...\",\n        onChange: e => searchData(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"f-right select-filter-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"span-filter-title\",\n          children: \"Filter Movies\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"f-right select-filter\",\n          \"aria-label\": \"Default select example\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"1\",\n            selected: true,\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"2\",\n            children: \"Series\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"3\",\n            children: \"Movies\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), movies.filter((movie, index))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: searchTerm.length >= 3 ? filteredResults.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/movies/${movie.id}/${movie.title.toLowerCase().replace(urlRegex, '-')}`,\n          style: {\n            textDecoration: 'none'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: movie.images['Poster Art'].url,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"movie-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: movie.releaseYear\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: movie.programType\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"overview\",\n            children: /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: movie.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this)\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 15\n      }, this)) : movies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/movies/${movie.id}/${movie.title.toLowerCase().replace(urlRegex, '-')}`,\n          style: {\n            textDecoration: 'none'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: movie.images['Poster Art'].url,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"movie-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: movie.releaseYear\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: movie.programType\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"overview\",\n            children: /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: movie.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this)\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MovieList, \"hzFhkwNGudLppfI/vclRSgvFn0Q=\");\n\n_c = MovieList;\nexport default MovieList;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"names":["Link","useState","MovieList","movies","urlRegex","searchTerm","setSearchTerm","filteredResults","setFilteredResults","searchData","value","filteredData","filter","movie","Object","values","title","join","toLowerCase","includes","e","target","index","length","map","id","replace","textDecoration","images","url","releaseYear","programType"],"sources":["C:/Users/AMHF/Desktop/project-for-job/project/main/src/components/MovieList.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport { useState } from 'react';\nimport './movielist.css';\n\nfunction MovieList({ movies }) {\n  const urlRegex = /\\s/g;\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filteredResults, setFilteredResults] = useState([]);\n\n  const searchData = (value) => {\n    setSearchTerm(value);\n    if (searchTerm !== '') {\n      const filteredData = movies.filter((movie) => Object.values(movie.title).join('').toLowerCase().includes(searchTerm.toLowerCase()));\n      setFilteredResults(filteredData);\n    } else {\n      setFilteredResults(movies);\n    }\n  };\n\n  return (\n\n    <div>\n\n      <nav className=\"navbar\">\n        <input className=\"search f-left\" type=\"text\" placeholder=\"Search...\" onChange={(e) => searchData(e.target.value)} />\n\n        <div className=\"f-right select-filter-container\">\n          <span className=\"span-filter-title\">Filter Movies</span>\n          <select className=\"f-right select-filter\" aria-label=\"Default select example\">\n            <option value=\"1\" selected>All</option>\n            <option value=\"2\">Series</option>\n            <option value=\"3\">Movies</option>\n            {movies.filter((movie, index))}\n          </select>\n        </div>\n      </nav>\n\n      <div className=\"main\">\n        {\n          searchTerm.length >= 3 ? (\n            filteredResults.map((movie) => (\n\n              <div key={movie.id} className=\"movie\">\n                <Link to={`/movies/${movie.id}/${movie.title.toLowerCase().replace(urlRegex, '-')}`} style={{ textDecoration: 'none' }}>\n                  <img src={movie.images['Poster Art'].url} alt=\"\" />\n\n                  <div className=\"movie-info\">\n\n                    <span>{movie.releaseYear}</span>\n                    <span>{movie.programType}</span>\n                  </div>\n                  <div className=\"overview\">\n\n                    <h5>{ movie.title }</h5>\n\n                  </div>\n                </Link>\n              </div>\n            ))\n          ) : (\n            movies.map((movie) => (\n\n              <div key={movie.id} className=\"movie\">\n\n                <Link to={`/movies/${movie.id}/${movie.title.toLowerCase().replace(urlRegex, '-')}`} style={{ textDecoration: 'none' }}>\n                  <img src={movie.images['Poster Art'].url} alt=\"\" />\n\n                  <div className=\"movie-info\">\n                    <span>{movie.releaseYear}</span>\n                    <span>{movie.programType}</span>\n                  </div>\n                  <div className=\"overview\">\n\n                    <h5>{ movie.title }</h5>\n\n                  </div>\n                </Link>\n              </div>\n\n            ))\n          )\n        }\n      </div>\n\n    </div>\n  );\n}\n\nexport default MovieList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}